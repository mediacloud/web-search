#!/bin/sh

# install web-search crontab
# from rss-fetcher/dokku-scripts/crontab.sh
# must be run as root

INSTANCE=$1

if [ -z "$INSTANCE" ]; then
   echo Usage: $0 INSTANCE 1>&2
   exit 1
fi

case $INSTANCE in
prod|staging) ;;
*) echo "$0: Not supported for user instances" 1>&2; exit 1;;
esac

SCRIPT_DIR=$(dirname $0)
COMMON_SH=$SCRIPT_DIR/common.sh
if [ ! -f $COMMON_SH ]; then
    echo cannot find $COMMON_SH 1>&2
    exit 1
fi
. $COMMON_SH

check_root

if ! dokku apps:exists $APP >/dev/null 2>&1; then
    echo "$APP not found: are you on the right server?" 1>&2
    exit 1
fi

# server log directory for crontab entries.
# files not rotated, so only save output from last invocation.
LOGDIR=/var/tmp

if [ "x$LOGDIR" != x/var/tmp ]; then
    # NOTE!!! LOGDIR for crontabs outside of app "storage" area; only saving output of last run
    # all scripts/*.py log to /app/storage/logs, w/ daily rotation and 7 day retention
    test -d $LOGDIR || mkdir -p $LOGDIR
fi

CRONTEMP="/tmp/$APP.cron.tmp"

# prevent world/group write to CRONTEMP/CRONTAB
umask 022

# run periodic scripts in supervisord container rather than firing up a
# new container just for the duration of the script.
DOKKU_RUN_PERIODIC="/usr/bin/dokku enter $APP supervisord"

# pick hour for queuing maintenance tasks based on instance
# type, so production and staging don't run at the same time!

# Would *VASTLY* prefer that servers be run in GMT, avoiding timezone
# jingoism and daylight time related madness, BUT that isn't currently
# the case for the angwin cluster.

# So long as the local timezone and (current) DST rules are in effect,
# avoid using the 1 & 2 (AM) hours for ANYTHING, since 2AM local time
# doesn't exist the day clocks "spring ahead" and 1AM happens TWICE
# the day they "fall back"!!!

# 12 hour spacing for prod/staging might be preferable, but that makes
# it hard to avoid hours when humans (of different persuasions) might
# accessing Elasticsearch somewhere in the world.  These are just initial
# choices, and might need to be adjusted!!!

case $INSTANCE in
prod) HOUR=5;;
staging) HOUR=0;;
*) echo "not currently allowed for user instances!" 1>&2; exit 1;;
esac

cat >$CRONTEMP <<EOF
# MACHINE CREATED!!! PLEASE DO NOT EDIT THIS FILE!!!
# edit and run web-search/dokku-scripts/crontab.sh instead!!!!!!
#
# NOTE! only saving output from last run
#
# MIT Dorm "Random House" says 17 is the most random number
#17 $HOUR * * * root $DOKKU_RUN_PERIODIC ./daily-maint.sh > $LOGDIR/$APP-daily-maint.log 2>&1

# 42 is the ultimate answer to life, the universe and everything
#42 $HOUR * * 6 root $DOKKU_RUN_PERIODIC ./weekly-maint.sh > $LOGDIR/$APP-weekly-maint.log 2>&1

# Don't remove this: web-search/dokku-scripts/push.sh checks for it!!
# $CRONTAB_HASH_MARKER $(crontab_sh_file_git_hashes)
EOF

if [ -f $CRONTAB ]; then
    if cmp -s $CRONTAB $CRONTEMP; then
	echo no change to $CRONTAB
	rm -f $CRONTEMP
    else
	SAVE=/tmp/$APP.cron.$$
	echo $CRONTAB differs, saving as $SAVE
	mv $CRONTAB $SAVE
	echo updating $CRONTAB
	mv $CRONTEMP $CRONTAB
    fi
else
    echo installing $CRONTAB
    mv $CRONTEMP $CRONTAB
fi
